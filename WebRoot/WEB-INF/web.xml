<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>course-student-classes</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  <!-- 处理乱码 -->
  	<filter>
  	<filter-name>CharacterEncodingFilter</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  	
  	<!-- 声明整个项目的编码集 -->
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  	
  	<!-- AJAX的编码集 -->
  	<init-param>
  		<param-name>forceEncoding</param-name>
  		<param-value>true</param-value>
  	</init-param>
  </filter>
   
  <filter-mapping>
  	<filter-name>CharacterEncodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 解决hibernate当中懒加载的问题，一旦发生该问题报错信息的是：
  failed to lazily initialize a collection of role: com.kuwei.ssh.dto.Student.courses, could not initialize proxy - no Session
   -->
  <filter>  
	  <filter-name>hibernateFilter</filter-name>  
	  <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>  
  </filter>
  <filter-mapping>
  	<filter-name>hibernateFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
 
  
  <!-- 声明spring核心配置文件的位置及其名称 -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:beans.xml</param-value>
  </context-param>
  
  <!-- 配置监听 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  
  <!-- s2的核心控制器 -->
  <filter>
  	<filter-name>s2</filter-name>
  	<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>s2</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>